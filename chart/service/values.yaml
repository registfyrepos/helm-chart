# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Environment
env: dev
# -- (int) Number of replicas to deploy. When HPA is enabled, this value is being ignored
replicas: 1
nameOverride: "{{ .Release.Name }}"
fullnameOverride: ""

# -- Create initContainers
initchk:
  create: false
initContainers:
  - name: []
    tag: []
    repository: []
    PullPolicy: Always
    command: []
    args: []
  # - name: phpmigration
  #   tag: cli
  #   repository: 801759287412.dkr.ecr.me-south-1.amazonaws.com/connect/connect-api
  #   command: ["/bin/sh", "-c"]
  #   args:
  #     - ./entrypoint-init.sh
  # - name: test2
  #   tag: latest
  #   repository: 801759287412.dkr.ecr.me-south-1.amazonaws.com/connect/bifrost-api
  #   command: ["/bin/sh", "-c", "echo 'Hello from initContainer 2!'"]

image:
  # -- ECR image tag
  tag: v0.1
  # -- ECR Repository. This value must be changed to match service ECR repo
  repository: 1234567890.dkr.ecr.eu-west-2/demo
  pullPolicy: IfNotPresent

imagePullSecrets: []

ingress:
  enabled: true
  sticky: false
  rules:
    - Host(`service.thefinx.io`)
# -- Deployment annotations
annotations: {}


# -- Docker container port
containerPort: 80

service:
  # -- Kong backendProtocol supported by Kong can be either `http` , `https` , `grpc`
  backendProtocol: http
  # -- Service type, can be either `ClusterIP`, `NodePort`, `LoadBalancer` or `ExternalName`
  type: ClusterIP
  # -- Kubernetes service port
  port: 80

# We should always specify how much of each resource a container needs.
# https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
resources:
  limits:
    # -- Resource memory limit
    memory: 1Gi
  requests:
    # -- Resource request cpu
    cpu: 250m
    # -- Resource request memory
    memory: 512Mi

# The kubelet uses startup probe to indicates whether the application within the container is started
# https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#when-should-you-use-a-startup-probe
startupProbe:
#  tcpSocket:
    # -- Startupprobe healthcheck port. This should be equal to docker container port in most cases
#    port: 80
    # -- Initial delay seconds to start checking the healthcheck of the pod
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 2
  failureThreshold: 30

# The kubelet uses readiness probes to know when a container is ready to start accepting traffic.
# https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
readinessProbe:
#  httpGet:
    # -- Readinessprobe healthcheck path
#    path: /
    # -- Readinessprobe port. This should be equal to docker container port in most cases
#    port: 80
#    scheme: HTTP
  timeoutSeconds: 2
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 3

# The kubelet uses liveness probes to know when to restart a container.
# https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
#  tcpSocket:
#    port: 80
  timeoutSeconds: 2
  periodSeconds: 15
  successThreshold: 1
  failureThreshold: 3

# -- (list) Environment variable list
environment: []
# environment:
#   - name: FOO
#     value: bar
#   - name: BAZ
#     value: qux

# -- (list) Environment list from kubernetes secrets
envFrom: []
# envFrom:
#   - configMapRef: myapp-config
#     name: myapp
#   - secretRef: myapp-secret
#     name: myapp

# -- (list) List of volumes to create
volumes: []
# volumes:
#   - name: my-volume
#     secret:
#       secretName: my-secret-name

# -- (list) List of volumes to attach
volumeMounts: []
# volumeMounts:
#   - name: my-volume
#     mountPath: /path/to/volume
#     readOnly: true

revisionHistoryLimit: 10
rollingUpdate:
  maxUnavailable: 50%
  maxSurge: 25%

serviceAccount:
  # -- (bool) If true, creates service account
  create: false
  # The name of the service account to use.
  # -- If not set and create is true, a name is generated using the fullname template
  name: ""
  # -- Provide IAM Role ARN, if create is true.
  annotations: {}


podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# -- Pod affinity rule. Default affinity rule is set to make sure pods are not deployed on the same node
affinity: {}

# -- Provide node groups selector
nodeSelector: {}

# -- If node group is tainted, provide pod tolerations to run on specific node groups
tolerations: []

# Horizontal Pod Autoscaler automatically scales the number of pods based on CPU utilization.
# https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/
horizontalPodAutoscaler:
  # -- (bool) Whether to enable hpa. Set to true for Prod
  enabled: false
  # -- (int) when true, this value should be equal to number of replicas in deployment. Must be >1 for production
  minReplicas: 1
  # -- (int) maximum number of replicas. Set this value as 6x of the minimum pods
  maxReplicas: 6
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          # -- CPU target average utilization of the pods to trigger scalie
          averageUtilization: 75
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 15
      selectPolicy: Max

# Vertical Pod autoscaling can recommend values for CPU and memory requests and limits.
# https://cloud.google.com/kubernetes-engine/docs/concepts/verticalpodautoscaler
# -- If true, vertical-pod-autoscaler is created in `Off` or `Recommendation` updateMode
verticalPodAutoscaler:
  enabled: false

podDisruptionBudget:
  enabled: false  # If true, PodDisruptionBudget is created. Recommended to set `true` for production usage
  minAvailable: 1  # Minimum available replicas during disruption; ignored if there is no PodDisruptionBudget

# Container lifecycle hook
lifecycle:
  # -- Pre stop command to run just before handling a termination request from API. This helps in graceful termination of the pods
  preStop:
    exec:
      command: ["/bin/sh","-c","sleep 2"]

externalSecret:
  # -- If true, externalSecret will be created
  enabled: false
  #name: ""
  # -- backend type. vault or systemManager. Default: vault
  backendType: vault
  # -- Required when backendType is vault. Change this EKS cluster name. Remove this when backendType is systemManager
  vaultMountPoint: kubernetes-finx-qa-eks-cluster
  # -- Required when backendType is vault. Remove this when backendType is systemManager
  vaultRole: external-secrets
  # -- List of map of objects to fetch from the secret backend.
  data: []
  # data: # vault
  # - name: license_key
  #   key: secret/data/common/datadog
  #   property: license_key
  #
  # data: # systemManager
  # - name: config
  #   key: /common/qa/config
  #
  # -- dataFrom is used to retrieve all values from a specific path.
  dataFrom: []


####### Cronjob ######
cronjob:
  create: false
cronimage:
  # -- ECR image tag
  tag: v0.1
  # -- ECR Repository. This value must be changed to match service ECR repo
  repository: []
  imagePullPolicy: IfNotPresent
  imagePullSecrets: []
jobs_run_settings:
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  restartPolicy: Never
jobs: []
